name: Binaryen.ml - esy workflow
on:
  - push
  - pull_request

jobs:
  build:
    name: Build and test
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]

    steps:
      - name: (Windows) Find msbuild
        id: msbuild
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild@v1.0.1

      # - name: (Windows) Setup env vars
      #   if: runner.os == 'Windows'
      #   run: |
      #     echo "::set-env CI_PATH=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin;C:/msys64/mingw64/bin;C:/ProgramData/Chocolatey/bin;C:/Program Files/nodejs;/usr/local/bin;/usr/bin;/bin;/usr/sbin;/sbin;C:/windows/System32"
      #     echo "::set-env ESY__GLOBAL_PATH=CI_PATH"

      - name: Setup node.js
        uses: actions/setup-node@v2.1.0
        with:
          node-version: '14'
          check-latest: true

      # Install `esy` to build the project
      # It also adds `shx` globally for cross-platform shell commands
      - name: Setup environment
        run: |
          npm i -g @esy-nightly/esy
          npm i -g shx

      - name: Checkout project
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Install local dependencies
        run: |
          esy install

      - name: Esy cache
        id: esy-cache
        uses: actions/cache@v2
        with:
          path: _export
          key:  ${{ runner.os }}-esy-${{ hashFiles('esy.lock/index.json') }}

      - name: Import esy cache
        if: steps.esy-cache.outputs.cache-hit == 'true'
        run: |
          esy import-dependencies _export
          shx rm -rf _export

      # Build the project in release to make sure deps are specified correctly
      - name: Build release dependencies
        if: steps.esy-cache.outputs.cache-hit != 'true'
        run: |
          esy build-dependencies --release
        env:
          CI_PATH: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin;/usr/local/bin;/usr/bin;/bin;/usr/sbin;/sbin;C:/windows/System32"
          ESY__GLOBAL_PATH: "CI_PATH"

      - name: Build project in release
        run: |
          esy build --release
        env:
          MSBUILD: ${{ steps.msbuild.outputs.msbuildPath }}

      # Then build in non-release so we can test
      - name: Build dependencies
        if: steps.esy-cache.outputs.cache-hit != 'true'
        run: |
          esy build-dependencies
        env:
          CI_PATH: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin;/usr/local/bin;/usr/bin;/bin;/usr/sbin;/sbin;C:/windows/System32"
          ESY__GLOBAL_PATH: "CI_PATH"

      - name: Build project
        run: |
          esy build
        env:
          MSBUILD: ${{ steps.msbuild.outputs.msbuildPath }}

      # Re-export dependencies if anything has changed or if it is the first time
      - name: Build esy cache
        if: steps.esy-cache.outputs.cache-hit != 'true'
        run: |
          esy export-dependencies

      - name: Run tests
        run: |
          esy test
